Q1.
//Password Validation
//2. Write a Java method to check whether a string is a valid password. 
//Password rules:
//A password must have at least ten characters.
//A password consists of only letters and digits.
//A password must contain at least two digits.


package practice.day4;
import java.util.*;
import java.util.Scanner;
public class Q1 {
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		String s=sc.nextLine();
		char[] arr=s.replaceAll(" ","").toCharArray();
		//System.out.println((int)arr[0]);
		int flag=0,numflag=0;
		
		for(char a:arr)
		{
			if(arr.length<10)
			{
			break;	//65-90   97-122      48-57
			}
			if(((int)a>=65 && (int)a<=90) || ((int)a>=97 && (int)a<=122) || ((int)a>=48 && (int)a<=57))
			{ 
				if(((int)a>=48 && (int)a<=57))
				{
					numflag++; 
				}
				
			  flag++;
			}
		}
		if(flag==arr.length && numflag>=2)
			
		{
			System.out.println("Valid Password :) ");
		}
		else
			System.out.println("Invalid Password :( ");
	}

}




Q2
10. Write a Java program to move every positive number to the right and every negative number to the left of a given array of integers. 
Expected Output:
Original array: [-2, 3, 4, -1, -3, 1, 2, -4, 0]
Result: [-4, -3, -2, -1, 0, 1, 2, 3, 4]







package practice.day4;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class Q10 {
	public static void main(String[] args)
	{
		long[] arr= {-5,3,6,-2,-8,9,-4,7,2,0};
		long temp=0;
		for(int i=0;i<arr.length;i++)
		{
			for(int j=i+1;j<arr.length;j++)
			{
		if(arr[i]>arr[j])
		{
		temp=arr[i];
		arr[i]=arr[j];
		arr[j]=temp;
		}
		}
	}
		for(int j=arr.length-1;j>=0;j--)
		{
		System.out.print(arr[j]+", ");
		}
}
}


